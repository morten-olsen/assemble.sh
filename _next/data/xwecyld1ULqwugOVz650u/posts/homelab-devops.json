{"pageProps":{"postData":{"id":"homelab-devops","source":{"compiledSource":"var h=Object.defineProperty,c=Object.defineProperties;var m=Object.getOwnPropertyDescriptors;var i=Object.getOwnPropertySymbols;var r=Object.prototype.hasOwnProperty,s=Object.prototype.propertyIsEnumerable;var p=(e,a,t)=>a in e?h(e,a,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[a]=t,n=(e,a)=>{for(var t in a||(a={}))r.call(a,t)&&p(e,t,a[t]);if(i)for(var t of i(a))s.call(a,t)&&p(e,t,a[t]);return e},d=(e,a)=>c(e,m(a));var l=(e,a)=>{var t={};for(var o in e)r.call(e,o)&&a.indexOf(o)<0&&(t[o]=e[o]);if(e!=null&&i)for(var o of i(e))a.indexOf(o)<0&&s.call(e,o)&&(t[o]=e[o]);return t};const layoutProps={},MDXLayout=\"wrapper\";function MDXContent(t){var o=t,{components:e}=o,a=l(o,[\"components\"]);return mdx(MDXLayout,d(n(n({},layoutProps),a),{components:e,mdxType:\"MDXLayout\"}),mdx(\"p\",null,\"So I have a home lab, and through its existance it have been managed in pretty much every way imaginable. I have done virtualization with ESXi, XCP-NG, Proxmox, I have run dedicated docker hosts, i have run Docker Swarm and Kubernetes as HA setups with hyper convergence using Gluster on CephFS. I have used docker, docker-compose, kubectl, helm, ansible, rancher, portainer etc. for daily managment and setup tasks. So from the most bare metal setup to large (or as large as I could make it with the hardware I have) setups.\"),mdx(\"p\",null,`One thing that has been a common thread between all these setups: Managing my homelab was a pain. Especially as I went for higher availability and an \"easier\"-to-use setup, the managerial pain increased. I felt like a System Administrator in my own home. Don't get me wrong, I have respect for the profession and I don't mind the odd SysAdm task now and again, but I prefer to experiment with the actual services instead of the underlaying metal.`),mdx(\"p\",null,\"This is why I have decided to change tactics, and this post tries to explain this new approach and how you could use it in your own homelab setup, if you as me are tired of speending more time managing than developing og spinning up new interesting services.\"),mdx(\"h2\",null,\"No more HA\"),mdx(\"p\",null,\"Okay, this may be a weird path to go down, and this is most likely only a temorary path for me, but to get up and running I have decided that this time around I am not going to be focusing on high availability, but instead rely on an easy to setup and replicate setup with strong backup for restoring everything in case of a catastrofic failure. Therefor I am going to go with a single Docker node and just use host mounts for data storage. Later I will try to expand upon this using something like docker swarm or kubernetes along with hyper convergence, but atleast for now I want a simpler setup\"),mdx(\"h2\",null,\"Queue the DevOps approach\"),mdx(\"p\",null,\"As said, I am not a SysAdm, I am a developer, and therefor the DevOps approach is more near and dear to my heart, and the one I will be using for this new setup.\"),mdx(\"p\",null,\"I have been running Gitea to host some of my projects locally for a few years, and it is also what I am going to be using as configuration on project storage for this new setup. Additionally I need a CI/CD pipeline to build and deploy the projects that I host in my Gitea instance. For this perpose I will be using Drone CI with a Docker based runner.\"),mdx(\"p\",null,\"So that is basically it, nice and simple right? So the flow works like this:\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},\"Create a repo in Gitea\"),mdx(\"li\",{parentName:\"ul\"},\"Enable builds on Drone CI for the new repo\"),mdx(\"li\",{parentName:\"ul\"},\"Push the project along with a \",mdx(\"inlineCode\",{parentName:\"li\"},\".drone.yml\"),\" workflow file which will build and deploy the project\")),mdx(\"h2\",null,\"Setting up the system\"),mdx(\"p\",null,\"Okay so let us go through the initial setup. Not everythin can be automated, so it will require a few steps\"),mdx(\"p\",null,\"First clone or download the project repository from TODO\"),mdx(\"p\",null,\"Then we need to add in som environment variables. Create a \",mdx(\"inlineCode\",{parentName:\"p\"},\".env\"),\" file in the project with the follwing content (replace any values with your own)\"),mdx(\"pre\",null,mdx(\"code\",n({parentName:\"pre\"},{}),`EXTERNAL_DOMAIN=external.loopback.services\nINTERNAL_DOMAIN=internal.loopback.services\nDATA_LOCATION=./data\nCLOUDFLARE_TOKEN=some-token-here\nCLOUDFLARE_EMAIL=you@email.here\n`)),mdx(\"p\",null,\"Okay we are ready to setup the first two components, the Gitea git server and the traefik load balancer for our web traffic\"),mdx(\"pre\",null,mdx(\"code\",n({parentName:\"pre\"},{}),`docker network create loadbalancer\ndocker-compose -p traefik -f docker-compose-0.yml\ndocker-compose -p gitea -f docker-compose-1.yml\n`)),mdx(\"p\",null,\"Next we need to setup Drone with Gitea as the provider. The official documentation can be found \",mdx(\"a\",n({parentName:\"p\"},{href:\"https://docs.drone.io/server/provider/gitea/\"}),\"here\")),mdx(\"p\",null,\"Navigate to \",mdx(\"inlineCode\",{parentName:\"p\"},\"https://gitea.external.loopback.services/user/settings/applications\")),mdx(\"p\",null,\"And create a new application with any name you choose and the login url as \",mdx(\"inlineCode\",{parentName:\"p\"},\"https://drone.external.loopback.services\")),mdx(\"p\",null,\"This will give you a client id and a secret which we will use in a second\"),mdx(\"p\",null,`Next we need a shared key for drone and its workers. To create this we use the method propsed by the official documentation\n`,mdx(\"inlineCode\",{parentName:\"p\"},\"openssl rand -hex 16\"),\" which will give us a random 16 charator secret\"),mdx(\"p\",null,\"We add these new information into our \",mdx(\"inlineCode\",{parentName:\"p\"},\".env\"),\" file below our existing values\"),mdx(\"pre\",null,mdx(\"code\",n({parentName:\"pre\"},{}),`GITEA_CLIENT_ID=92491bfe-26ae-464e-8d75-7b7632ecce05\nGITEA_CLIENT_SECRET=bx5vThgdfYRNqBV8rDGySyrZxeAuYaMXakXWm0IX6mM=\nDRONE_RPC_SECRET=7dde7b625f9dc30cd3a8fb8f1a614dcc\nDRONE_ADMIN=the-gitea-admin-user-name\n\n`)),mdx(\"p\",null,\"Ready to rock!\"),mdx(\"pre\",null,mdx(\"code\",n({parentName:\"pre\"},{}),`docker-compose -p drone -f docker-compose-2.yml\n`)),mdx(\"p\",null,\"Now go to \",mdx(\"inlineCode\",{parentName:\"p\"},\"https://drone.external.loopback.services\"),\" and complete the setup\"),mdx(\"p\",null,\"Congratulation, setup is done! No more SysAdm, just DevOps from here\"))}MDXContent.isMDXComponent=!0;\n","scope":{}},"title":"Homelabing, the DevOps way","date":"2021-07-25"}},"__N_SSG":true}